#include <asf.h>
#include <stdio.h>
#include <avr/io.h>
#include <avr/interrupt.h>
#include "uart.h"
#include "util/delay.h"

volatile unsigned int rising_edge, edge1, period; // Initialize all relevant variables

ISR(TIMER1_CAPT_vect) {
	// Rising edge logic, given that PB0 has a value of 1
	if (PINB & 0x01) {
		rising_edge += 1;				// Boolean value for rising edge
		if (rising_edge == 1) { edge1 = ICR1; } 	// First rising edge
		else { period = ICR1 - edge1; } 		// Units are obscure...period?
		if (rising_edge == 2) { rising_edge = 0; }	// Reset rising edge counter 
	}
}

int main (void)
{
	uart_init();		// Initialize serial communication
	sei();			// Enable interrupts globally
	TIMSK1 = 0x20;		// Enable input capture interrupt
	TCCR1B = 0x45;		// Select timer 1 with a prescaler of 1024, begin input capture on rising edge
	TIFR1 |= 0x20;		// Clear input capture flag at ICF1 bit in TIFR1, safety precaution
	while(1);		// Run program forever
}
